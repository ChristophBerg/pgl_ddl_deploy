SET client_min_messages = warning;
\set VERBOSITY TERSE
/***
No deploy allowed if table would be added to replication
***/
SET ROLE test_pgl_ddl_deploy;
CREATE TABLE foo(id serial primary key);
RESET ROLE;
SELECT pgl_ddl_deploy.deploy('test1');
WARNING:  
  Deployment of auto-replication for set test1 failed
  because 1 tables are already queued to be added to replication
  based on your configuration.  These tables need to be added to
  replication manually and synced, otherwise change your configuration.
  Debug query: 
    SELECT n.nspname, c.relname 
    FROM pg_namespace n
      INNER JOIN pg_class c ON n.oid = c.relnamespace
        AND c.relpersistence = 'p'
      WHERE n.nspname ~* '.*'
        AND n.nspname !~* '^(pg_catalog|information_schema|pg_temp|pg_toast|pgl_ddl_deploy|pglogical).*'
        AND EXISTS (SELECT 1
        FROM pg_index i
        WHERE i.indrelid = c.oid
          AND i.indisprimary)
        AND NOT EXISTS
        (SELECT 1
        FROM pglogical.replication_set_relation rsr
        INNER JOIN pglogical.replication_set r
          ON r.set_id = rsr.set_id
        WHERE r.set_name = 'test1'
          AND rsr.set_reloid = c.oid);
    
 deploy 
--------
 f
(1 row)

SET ROLE test_pgl_ddl_deploy;
DROP TABLE foo;
RESET ROLE;
--This should work now
SELECT pgl_ddl_deploy.deploy('test1');
 deploy 
--------
 t
(1 row)

--This should work
SELECT pgl_ddl_deploy.disable('test1');
 disable 
---------
 t
(1 row)

--This should not work
SET ROLE test_pgl_ddl_deploy;
CREATE TABLE foo(id serial primary key);
RESET ROLE;
SELECT pgl_ddl_deploy.enable('test1');
WARNING:  
  Deployment of auto-replication for set test1 failed
  because 1 tables are already queued to be added to replication
  based on your configuration.  These tables need to be added to
  replication manually and synced, otherwise change your configuration.
  Debug query: 
    SELECT n.nspname, c.relname 
    FROM pg_namespace n
      INNER JOIN pg_class c ON n.oid = c.relnamespace
        AND c.relpersistence = 'p'
      WHERE n.nspname ~* '.*'
        AND n.nspname !~* '^(pg_catalog|information_schema|pg_temp|pg_toast|pgl_ddl_deploy|pglogical).*'
        AND EXISTS (SELECT 1
        FROM pg_index i
        WHERE i.indrelid = c.oid
          AND i.indisprimary)
        AND NOT EXISTS
        (SELECT 1
        FROM pglogical.replication_set_relation rsr
        INNER JOIN pglogical.replication_set r
          ON r.set_id = rsr.set_id
        WHERE r.set_name = 'test1'
          AND rsr.set_reloid = c.oid);
    
 enable 
--------
 f
(1 row)

SET ROLE test_pgl_ddl_deploy;
DROP TABLE foo;
RESET ROLE;
--This should work now
SELECT pgl_ddl_deploy.enable('test1');
 enable 
--------
 t
(1 row)

--Enable all the rest
DO $$
DECLARE v_rec RECORD;
BEGIN

FOR v_rec IN
    SELECT set_name
    FROM pglogical.replication_set
    WHERE set_name LIKE 'test%' AND set_name <> 'test1'
    ORDER BY set_name
LOOP

PERFORM pgl_ddl_deploy.deploy(v_rec.set_name);

END LOOP;

END$$;
