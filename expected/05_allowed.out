SET ROLE test_pgl_ddl_deploy;
SET client_min_messages TO warning;
/***
In default schema
**/
CREATE TABLE foo(id serial primary key);
SELECT * FROM check_rep_tables;
 set_name | table_name 
----------+------------
 test1    | foo
 test2    | foo
 test3    | foo
 test4    | foo
(4 rows)

SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |               ddl_sql_raw                |               ddl_sql_sent               
----------+------------------------------------------+------------------------------------------
 test4    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test3    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test2    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test1    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
(4 rows)

ALTER TABLE foo ADD COLUMN bla TEXT;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |               ddl_sql_raw                |               ddl_sql_sent               
----------+------------------------------------------+------------------------------------------
 test4    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test3    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test2    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test1    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test4    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test3    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test2    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test1    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
(8 rows)

INSERT INTO foo (bla) VALUES (1),(2),(3);
DROP TABLE foo CASCADE;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |               ddl_sql_raw                |               ddl_sql_sent               
----------+------------------------------------------+------------------------------------------
 test4    | DROP TABLE foo CASCADE;                  | DROP TABLE foo CASCADE;
 test3    | DROP TABLE foo CASCADE;                  | DROP TABLE foo CASCADE;
 test2    | DROP TABLE foo CASCADE;                  | DROP TABLE foo CASCADE;
 test1    | DROP TABLE foo CASCADE;                  | DROP TABLE foo CASCADE;
 test4    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test3    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test2    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test1    | ALTER TABLE foo ADD COLUMN bla TEXT;     | ALTER TABLE foo ADD COLUMN bla TEXT;
 test4    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
 test3    | /***                                    +| /***                                    +
          | In default schema                       +| In default schema                       +
          | **/                                     +| **/                                     +
          | CREATE TABLE foo(id serial primary key); | CREATE TABLE foo(id serial primary key);
(10 rows)

CREATE FUNCTION foo() RETURNS INT AS
$BODY$
SELECT 1;
$BODY$
LANGUAGE SQL STABLE;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |             ddl_sql_raw              |             ddl_sql_sent             
----------+--------------------------------------+--------------------------------------
 test4    | CREATE FUNCTION foo() RETURNS INT AS+| CREATE FUNCTION foo() RETURNS INT AS+
          | $BODY$                              +| $BODY$                              +
          | SELECT 1;                           +| SELECT 1;                           +
          | $BODY$                              +| $BODY$                              +
          | LANGUAGE SQL STABLE;                 | LANGUAGE SQL STABLE;
 test3    | CREATE FUNCTION foo() RETURNS INT AS+| CREATE FUNCTION foo() RETURNS INT AS+
          | $BODY$                              +| $BODY$                              +
          | SELECT 1;                           +| SELECT 1;                           +
          | $BODY$                              +| $BODY$                              +
          | LANGUAGE SQL STABLE;                 | LANGUAGE SQL STABLE;
 test2    | CREATE FUNCTION foo() RETURNS INT AS+| CREATE FUNCTION foo() RETURNS INT AS+
          | $BODY$                              +| $BODY$                              +
          | SELECT 1;                           +| SELECT 1;                           +
          | $BODY$                              +| $BODY$                              +
          | LANGUAGE SQL STABLE;                 | LANGUAGE SQL STABLE;
 test1    | CREATE FUNCTION foo() RETURNS INT AS+| CREATE FUNCTION foo() RETURNS INT AS+
          | $BODY$                              +| $BODY$                              +
          | SELECT 1;                           +| SELECT 1;                           +
          | $BODY$                              +| $BODY$                              +
          | LANGUAGE SQL STABLE;                 | LANGUAGE SQL STABLE;
 test4    | DROP TABLE foo CASCADE;              | DROP TABLE foo CASCADE;
 test3    | DROP TABLE foo CASCADE;              | DROP TABLE foo CASCADE;
 test2    | DROP TABLE foo CASCADE;              | DROP TABLE foo CASCADE;
 test1    | DROP TABLE foo CASCADE;              | DROP TABLE foo CASCADE;
 test4    | ALTER TABLE foo ADD COLUMN bla TEXT; | ALTER TABLE foo ADD COLUMN bla TEXT;
 test3    | ALTER TABLE foo ADD COLUMN bla TEXT; | ALTER TABLE foo ADD COLUMN bla TEXT;
(10 rows)

ALTER FUNCTION foo() OWNER TO current_user;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                 |                ddl_sql_sent                 
----------+---------------------------------------------+---------------------------------------------
 test4    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test3    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test2    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test1    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test4    | CREATE FUNCTION foo() RETURNS INT AS       +| CREATE FUNCTION foo() RETURNS INT AS       +
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test3    | CREATE FUNCTION foo() RETURNS INT AS       +| CREATE FUNCTION foo() RETURNS INT AS       +
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test2    | CREATE FUNCTION foo() RETURNS INT AS       +| CREATE FUNCTION foo() RETURNS INT AS       +
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test1    | CREATE FUNCTION foo() RETURNS INT AS       +| CREATE FUNCTION foo() RETURNS INT AS       +
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test4    | DROP TABLE foo CASCADE;                     | DROP TABLE foo CASCADE;
 test3    | DROP TABLE foo CASCADE;                     | DROP TABLE foo CASCADE;
(10 rows)

DROP FUNCTION foo();
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                 |                ddl_sql_sent                 
----------+---------------------------------------------+---------------------------------------------
 test4    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test3    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test2    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test1    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test4    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test3    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test2    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test1    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test4    | CREATE FUNCTION foo() RETURNS INT AS       +| CREATE FUNCTION foo() RETURNS INT AS       +
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test3    | CREATE FUNCTION foo() RETURNS INT AS       +| CREATE FUNCTION foo() RETURNS INT AS       +
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
(10 rows)

CREATE VIEW fooview AS
SELECT 1 AS myfield;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                 |                ddl_sql_sent                 
----------+---------------------------------------------+---------------------------------------------
 test4    | CREATE VIEW fooview AS                     +| CREATE VIEW fooview AS                     +
          | SELECT 1 AS myfield;                        | SELECT 1 AS myfield;
 test3    | CREATE VIEW fooview AS                     +| CREATE VIEW fooview AS                     +
          | SELECT 1 AS myfield;                        | SELECT 1 AS myfield;
 test2    | CREATE VIEW fooview AS                     +| CREATE VIEW fooview AS                     +
          | SELECT 1 AS myfield;                        | SELECT 1 AS myfield;
 test1    | CREATE VIEW fooview AS                     +| CREATE VIEW fooview AS                     +
          | SELECT 1 AS myfield;                        | SELECT 1 AS myfield;
 test4    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test3    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test2    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test1    | DROP FUNCTION foo();                        | DROP FUNCTION foo();
 test4    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
 test3    | ALTER FUNCTION foo() OWNER TO current_user; | ALTER FUNCTION foo() OWNER TO current_user;
(10 rows)

ALTER VIEW fooview RENAME TO barview;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |              ddl_sql_raw              |             ddl_sql_sent              
----------+---------------------------------------+---------------------------------------
 test4    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test3    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test2    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test1    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test4    | CREATE VIEW fooview AS               +| CREATE VIEW fooview AS               +
          | SELECT 1 AS myfield;                  | SELECT 1 AS myfield;
 test3    | CREATE VIEW fooview AS               +| CREATE VIEW fooview AS               +
          | SELECT 1 AS myfield;                  | SELECT 1 AS myfield;
 test2    | CREATE VIEW fooview AS               +| CREATE VIEW fooview AS               +
          | SELECT 1 AS myfield;                  | SELECT 1 AS myfield;
 test1    | CREATE VIEW fooview AS               +| CREATE VIEW fooview AS               +
          | SELECT 1 AS myfield;                  | SELECT 1 AS myfield;
 test4    | DROP FUNCTION foo();                  | DROP FUNCTION foo();
 test3    | DROP FUNCTION foo();                  | DROP FUNCTION foo();
(10 rows)

DROP VIEW barview;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |              ddl_sql_raw              |             ddl_sql_sent              
----------+---------------------------------------+---------------------------------------
 test4    | DROP VIEW barview;                    | DROP VIEW barview;
 test3    | DROP VIEW barview;                    | DROP VIEW barview;
 test2    | DROP VIEW barview;                    | DROP VIEW barview;
 test1    | DROP VIEW barview;                    | DROP VIEW barview;
 test4    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test3    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test2    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test1    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test4    | CREATE VIEW fooview AS               +| CREATE VIEW fooview AS               +
          | SELECT 1 AS myfield;                  | SELECT 1 AS myfield;
 test3    | CREATE VIEW fooview AS               +| CREATE VIEW fooview AS               +
          | SELECT 1 AS myfield;                  | SELECT 1 AS myfield;
(10 rows)

CREATE SEQUENCE foo;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |              ddl_sql_raw              |             ddl_sql_sent              
----------+---------------------------------------+---------------------------------------
 test4    | CREATE SEQUENCE foo;                  | CREATE SEQUENCE foo;
 test3    | CREATE SEQUENCE foo;                  | CREATE SEQUENCE foo;
 test2    | CREATE SEQUENCE foo;                  | CREATE SEQUENCE foo;
 test1    | CREATE SEQUENCE foo;                  | CREATE SEQUENCE foo;
 test4    | DROP VIEW barview;                    | DROP VIEW barview;
 test3    | DROP VIEW barview;                    | DROP VIEW barview;
 test2    | DROP VIEW barview;                    | DROP VIEW barview;
 test1    | DROP VIEW barview;                    | DROP VIEW barview;
 test4    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
 test3    | ALTER VIEW fooview RENAME TO barview; | ALTER VIEW fooview RENAME TO barview;
(10 rows)

ALTER SEQUENCE foo RESTART;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |         ddl_sql_raw         |        ddl_sql_sent         
----------+-----------------------------+-----------------------------
 test4    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test3    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test2    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test1    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test4    | CREATE SEQUENCE foo;        | CREATE SEQUENCE foo;
 test3    | CREATE SEQUENCE foo;        | CREATE SEQUENCE foo;
 test2    | CREATE SEQUENCE foo;        | CREATE SEQUENCE foo;
 test1    | CREATE SEQUENCE foo;        | CREATE SEQUENCE foo;
 test4    | DROP VIEW barview;          | DROP VIEW barview;
 test3    | DROP VIEW barview;          | DROP VIEW barview;
(10 rows)

DROP SEQUENCE foo;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |         ddl_sql_raw         |        ddl_sql_sent         
----------+-----------------------------+-----------------------------
 test4    | DROP SEQUENCE foo;          | DROP SEQUENCE foo;
 test3    | DROP SEQUENCE foo;          | DROP SEQUENCE foo;
 test2    | DROP SEQUENCE foo;          | DROP SEQUENCE foo;
 test1    | DROP SEQUENCE foo;          | DROP SEQUENCE foo;
 test4    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test3    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test2    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test1    | ALTER SEQUENCE foo RESTART; | ALTER SEQUENCE foo RESTART;
 test4    | CREATE SEQUENCE foo;        | CREATE SEQUENCE foo;
 test3    | CREATE SEQUENCE foo;        | CREATE SEQUENCE foo;
(10 rows)

CREATE SCHEMA foobar;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |      ddl_sql_raw      |     ddl_sql_sent      
----------+-----------------------+-----------------------
 test8    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test7    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test6    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test5    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test4    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test3    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test2    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test1    | CREATE SCHEMA foobar; | CREATE SCHEMA foobar;
 test4    | DROP SEQUENCE foo;    | DROP SEQUENCE foo;
 test3    | DROP SEQUENCE foo;    | DROP SEQUENCE foo;
(10 rows)

CREATE TABLE foobar.foo(id serial primary key);
SELECT * FROM check_rep_tables;
 set_name | table_name 
----------+------------
 test1    | foobar.foo
 test2    | foobar.foo
 test3    | foobar.foo
 test4    | foobar.foo
 test5    | foobar.foo
 test6    | foobar.foo
 test7    | foobar.foo
 test8    | foobar.foo
(8 rows)

SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                   ddl_sql_raw                   |                  ddl_sql_sent                   
----------+-------------------------------------------------+-------------------------------------------------
 test8    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test7    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test6    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test5    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test4    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test3    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test2    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test1    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test8    | CREATE SCHEMA foobar;                           | CREATE SCHEMA foobar;
 test7    | CREATE SCHEMA foobar;                           | CREATE SCHEMA foobar;
(10 rows)

ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                   ddl_sql_raw                   |                  ddl_sql_sent                   
----------+-------------------------------------------------+-------------------------------------------------
 test8    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test7    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test6    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test5    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test4    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test3    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test2    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test1    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;     | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test8    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
 test7    | CREATE TABLE foobar.foo(id serial primary key); | CREATE TABLE foobar.foo(id serial primary key);
(10 rows)

INSERT INTO foobar.foo (bla) VALUES (1),(2),(3);
DROP TABLE foobar.foo CASCADE;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                 |                ddl_sql_sent                 
----------+---------------------------------------------+---------------------------------------------
 test8    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test7    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test6    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test5    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test4    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test3    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test2    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test1    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test8    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT; | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
 test7    | ALTER TABLE foobar.foo ADD COLUMN bla TEXT; | ALTER TABLE foobar.foo ADD COLUMN bla TEXT;
(10 rows)

CREATE FUNCTION foobar.foo() RETURNS INT AS
$BODY$
SELECT 1;
$BODY$
LANGUAGE SQL STABLE;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                 |                ddl_sql_sent                 
----------+---------------------------------------------+---------------------------------------------
 test8    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test7    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test6    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test5    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test4    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test3    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test2    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test1    | CREATE FUNCTION foobar.foo() RETURNS INT AS+| CREATE FUNCTION foobar.foo() RETURNS INT AS+
          | $BODY$                                     +| $BODY$                                     +
          | SELECT 1;                                  +| SELECT 1;                                  +
          | $BODY$                                     +| $BODY$                                     +
          | LANGUAGE SQL STABLE;                        | LANGUAGE SQL STABLE;
 test8    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
 test7    | DROP TABLE foobar.foo CASCADE;              | DROP TABLE foobar.foo CASCADE;
(10 rows)

ALTER FUNCTION foobar.foo() OWNER TO current_user;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                    ddl_sql_raw                     |                    ddl_sql_sent                    
----------+----------------------------------------------------+----------------------------------------------------
 test8    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test7    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test6    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test5    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test4    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test3    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test2    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test1    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test8    | CREATE FUNCTION foobar.foo() RETURNS INT AS       +| CREATE FUNCTION foobar.foo() RETURNS INT AS       +
          | $BODY$                                            +| $BODY$                                            +
          | SELECT 1;                                         +| SELECT 1;                                         +
          | $BODY$                                            +| $BODY$                                            +
          | LANGUAGE SQL STABLE;                               | LANGUAGE SQL STABLE;
 test7    | CREATE FUNCTION foobar.foo() RETURNS INT AS       +| CREATE FUNCTION foobar.foo() RETURNS INT AS       +
          | $BODY$                                            +| $BODY$                                            +
          | SELECT 1;                                         +| SELECT 1;                                         +
          | $BODY$                                            +| $BODY$                                            +
          | LANGUAGE SQL STABLE;                               | LANGUAGE SQL STABLE;
(10 rows)

DROP FUNCTION foobar.foo();
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                    ddl_sql_raw                     |                    ddl_sql_sent                    
----------+----------------------------------------------------+----------------------------------------------------
 test8    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test7    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test6    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test5    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test4    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test3    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test2    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test1    | DROP FUNCTION foobar.foo();                        | DROP FUNCTION foobar.foo();
 test8    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
 test7    | ALTER FUNCTION foobar.foo() OWNER TO current_user; | ALTER FUNCTION foobar.foo() OWNER TO current_user;
(10 rows)

CREATE VIEW foobar.fooview AS
SELECT 1 AS myfield;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |          ddl_sql_raw          |         ddl_sql_sent          
----------+-------------------------------+-------------------------------
 test8    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test7    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test6    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test5    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test4    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test3    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test2    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test1    | CREATE VIEW foobar.fooview AS+| CREATE VIEW foobar.fooview AS+
          | SELECT 1 AS myfield;          | SELECT 1 AS myfield;
 test8    | DROP FUNCTION foobar.foo();   | DROP FUNCTION foobar.foo();
 test7    | DROP FUNCTION foobar.foo();   | DROP FUNCTION foobar.foo();
(10 rows)

ALTER VIEW foobar.fooview RENAME TO barview;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                  |                 ddl_sql_sent                 
----------+----------------------------------------------+----------------------------------------------
 test8    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test7    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test6    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test5    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test4    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test3    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test2    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test1    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test8    | CREATE VIEW foobar.fooview AS               +| CREATE VIEW foobar.fooview AS               +
          | SELECT 1 AS myfield;                         | SELECT 1 AS myfield;
 test7    | CREATE VIEW foobar.fooview AS               +| CREATE VIEW foobar.fooview AS               +
          | SELECT 1 AS myfield;                         | SELECT 1 AS myfield;
(10 rows)

DROP VIEW foobar.barview;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |                 ddl_sql_raw                  |                 ddl_sql_sent                 
----------+----------------------------------------------+----------------------------------------------
 test8    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test7    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test6    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test5    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test4    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test3    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test2    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test1    | DROP VIEW foobar.barview;                    | DROP VIEW foobar.barview;
 test8    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
 test7    | ALTER VIEW foobar.fooview RENAME TO barview; | ALTER VIEW foobar.fooview RENAME TO barview;
(10 rows)

CREATE SEQUENCE foobar.foo;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |         ddl_sql_raw         |        ddl_sql_sent         
----------+-----------------------------+-----------------------------
 test8    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test7    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test6    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test5    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test4    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test3    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test2    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test1    | CREATE SEQUENCE foobar.foo; | CREATE SEQUENCE foobar.foo;
 test8    | DROP VIEW foobar.barview;   | DROP VIEW foobar.barview;
 test7    | DROP VIEW foobar.barview;   | DROP VIEW foobar.barview;
(10 rows)

ALTER SEQUENCE foobar.foo RESTART;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |            ddl_sql_raw             |            ddl_sql_sent            
----------+------------------------------------+------------------------------------
 test8    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test7    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test6    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test5    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test4    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test3    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test2    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test1    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test8    | CREATE SEQUENCE foobar.foo;        | CREATE SEQUENCE foobar.foo;
 test7    | CREATE SEQUENCE foobar.foo;        | CREATE SEQUENCE foobar.foo;
(10 rows)

DROP SEQUENCE foobar.foo;
SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |            ddl_sql_raw             |            ddl_sql_sent            
----------+------------------------------------+------------------------------------
 test8    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test7    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test6    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test5    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test4    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test3    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test2    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test1    | DROP SEQUENCE foobar.foo;          | DROP SEQUENCE foobar.foo;
 test8    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
 test7    | ALTER SEQUENCE foobar.foo RESTART; | ALTER SEQUENCE foobar.foo RESTART;
(10 rows)

DROP SCHEMA foobar CASCADE;
SELECT * FROM check_rep_tables;
 set_name | table_name 
----------+------------
(0 rows)

SELECT set_name, ddl_sql_raw, ddl_sql_sent FROM pgl_ddl_deploy.events ORDER BY id DESC LIMIT 10;
 set_name |         ddl_sql_raw         |        ddl_sql_sent         
----------+-----------------------------+-----------------------------
 test8    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test7    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test6    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test5    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test4    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test3    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test2    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test1    | DROP SCHEMA foobar CASCADE; | DROP SCHEMA foobar CASCADE;
 test8    | DROP SEQUENCE foobar.foo;   | DROP SEQUENCE foobar.foo;
 test7    | DROP SEQUENCE foobar.foo;   | DROP SEQUENCE foobar.foo;
(10 rows)

SELECT * FROM pgl_ddl_deploy.unhandled;
 id | set_name | pid | executed_at | ddl_sql_raw | command_tag | reason | backend_xmin 
----+----------+-----+-------------+-------------+-------------+--------+--------------
(0 rows)

SELECT * FROM pgl_ddl_deploy.exceptions;
 id | set_name | pid | executed_at | ddl_sql | err_msg | err_state 
----+----------+-----+-------------+---------+---------+-----------
(0 rows)

