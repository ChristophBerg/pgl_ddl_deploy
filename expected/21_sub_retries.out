SET client_min_messages = warning;
--Some day, we should regress with multiple databases.  There are examples of this in pglogical code base
--For now, we will mock the subscriber behavior, which is less than ideal, because it misses testing execution
--on subscriber
DROP OWNED BY test_pgl_ddl_deploy;
DROP ROLE test_pgl_ddl_deploy;
DROP ROLE test_pgl_ddl_deploy_nopriv;
DROP EXTENSION pgl_ddl_deploy CASCADE;
CREATE EXTENSION pgl_ddl_deploy;
SET SESSION_REPLICATION_ROLE TO REPLICA; --To ensure testing subscriber behavior
CREATE ROLE test_pgl_ddl_deploy;
GRANT CREATE ON DATABASE contrib_regression TO test_pgl_ddl_deploy;
SELECT pgl_ddl_deploy.add_role(oid) FROM pg_roles WHERE rolname = 'test_pgl_ddl_deploy';
 add_role 
----------
 t
(1 row)

SET ROLE test_pgl_ddl_deploy;
--Mock subscriber_log insert which should take place on subscriber error when option enabled
INSERT INTO pgl_ddl_deploy.subscriber_logs
  (set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   subscriber_pid,
   executed_at,
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message)
VALUES
  ('foo',
   100,
   'awesome',
   1,
   'test_pgl_ddl_deploy',
   pg_backend_pid(),
   current_timestamp,
   'CREATE VIEW joy AS SELECT * FROM joyous',
   'SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;',
   FALSE,
   'relation "joyous" does not exist');
SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 {f}
(1 row)

SELECT pgl_ddl_deploy.retry_subscriber_log(rq.id)
FROM pgl_ddl_deploy.subscriber_logs rq
INNER JOIN pgl_ddl_deploy.subscriber_logs rqo ON rqo.id = rq.origin_subscriber_log_id
WHERE NOT rq.succeeded AND rq.next_subscriber_log_id IS NULL AND NOT rq.retrying
ORDER BY rqo.executed_at ASC, rqo.origin_subscriber_log_id ASC;
 retry_subscriber_log 
----------------------
 f
(1 row)

SELECT id,
   set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   origin_subscriber_log_id,
   next_subscriber_log_id, 
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message
FROM pgl_ddl_deploy.subscriber_logs ORDER BY id;
 id | set_name | provider_pid | provider_node_name | provider_set_config_id |  executed_as_role   | origin_subscriber_log_id | next_subscriber_log_id |                 ddl_sql                 |                              full_ddl_sql                              | succeeded |          error_message           
----+----------+--------------+--------------------+------------------------+---------------------+--------------------------+------------------------+-----------------------------------------+------------------------------------------------------------------------+-----------+----------------------------------
  1 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      2 | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | f         | relation "joyous" does not exist
  2 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      3 | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | f         | relation "joyous" does not exist
  3 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                        | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | f         | relation "joyous" does not exist
(3 rows)

CREATE TABLE joyous (id int);
SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 {t}
(1 row)

SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 
(1 row)

SELECT id,
   set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   origin_subscriber_log_id,
   next_subscriber_log_id, 
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message
FROM pgl_ddl_deploy.subscriber_logs ORDER BY id;
 id | set_name | provider_pid | provider_node_name | provider_set_config_id |  executed_as_role   | origin_subscriber_log_id | next_subscriber_log_id |                 ddl_sql                 |                              full_ddl_sql                              | succeeded |          error_message           
----+----------+--------------+--------------------+------------------------+---------------------+--------------------------+------------------------+-----------------------------------------+------------------------------------------------------------------------+-----------+----------------------------------
  1 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      2 | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | f         | relation "joyous" does not exist
  2 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      3 | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | f         | relation "joyous" does not exist
  3 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      4 | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | f         | relation "joyous" does not exist
  4 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                        | CREATE VIEW joy AS SELECT * FROM joyous | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous; | t         | 
(4 rows)

--Now let's do 2
INSERT INTO pgl_ddl_deploy.subscriber_logs
  (set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   subscriber_pid,
   executed_at,
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message)
VALUES
  ('foo',
   101,
   'awesome',
   1,
   'test_pgl_ddl_deploy',
   pg_backend_pid(),
   current_timestamp,
   'CREATE VIEW happy AS SELECT * FROM happier;',
   'SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier;',
   FALSE,
   'relation "happier" does not exist');
INSERT INTO pgl_ddl_deploy.subscriber_logs
  (set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   subscriber_pid,
   executed_at,
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message)
VALUES
  ('foo',
   102,
   'awesome',
   1,
   'test_pgl_ddl_deploy',
   pg_backend_pid(),
   current_timestamp,
   'CREATE VIEW glee AS SELECT * FROM gleeful;',
   'SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;',
   FALSE,
   'relation "gleeful" does not exist');
--The first fails and the second therefore is not attempted
SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 {f}
(1 row)

--Both fail if we try each separately
SELECT pgl_ddl_deploy.retry_subscriber_log(rq.id)
FROM pgl_ddl_deploy.subscriber_logs rq
INNER JOIN pgl_ddl_deploy.subscriber_logs rqo ON rqo.id = rq.origin_subscriber_log_id
WHERE NOT rq.succeeded AND rq.next_subscriber_log_id IS NULL AND NOT rq.retrying
ORDER BY rqo.executed_at ASC, rqo.origin_subscriber_log_id ASC;
 retry_subscriber_log 
----------------------
 f
 f
(2 rows)

SELECT id,
   set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   origin_subscriber_log_id,
   next_subscriber_log_id, 
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message
FROM pgl_ddl_deploy.subscriber_logs ORDER BY id;
 id | set_name | provider_pid | provider_node_name | provider_set_config_id |  executed_as_role   | origin_subscriber_log_id | next_subscriber_log_id |                   ddl_sql                   |                               full_ddl_sql                                | succeeded |           error_message           
----+----------+--------------+--------------------+------------------------+---------------------+--------------------------+------------------------+---------------------------------------------+---------------------------------------------------------------------------+-----------+-----------------------------------
  1 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      2 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  2 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      3 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  3 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      4 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  4 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                        | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | t         | 
  5 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                      7 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  6 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                      9 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
  7 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                      8 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  8 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                        | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  9 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                        | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
(9 rows)

--One succeeds, one fails
CREATE TABLE happier (id int);
SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 {t,f}
(1 row)

--One fails
SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 {f}
(1 row)

SELECT id,
   set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   origin_subscriber_log_id,
   next_subscriber_log_id, 
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message
FROM pgl_ddl_deploy.subscriber_logs ORDER BY id;
 id | set_name | provider_pid | provider_node_name | provider_set_config_id |  executed_as_role   | origin_subscriber_log_id | next_subscriber_log_id |                   ddl_sql                   |                               full_ddl_sql                                | succeeded |           error_message           
----+----------+--------------+--------------------+------------------------+---------------------+--------------------------+------------------------+---------------------------------------------+---------------------------------------------------------------------------+-----------+-----------------------------------
  1 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      2 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  2 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      3 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  3 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      4 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  4 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                        | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | t         | 
  5 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                      7 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  6 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                      9 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
  7 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                      8 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  8 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                     10 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  9 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                     11 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
 10 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                        | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | t         | 
 11 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                     12 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
 12 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                        | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
(12 rows)

--Succeed with new id
CREATE TABLE gleeful (id int);
SELECT pgl_ddl_deploy.retry_subscriber_log(rq.id)
FROM pgl_ddl_deploy.subscriber_logs rq
INNER JOIN pgl_ddl_deploy.subscriber_logs rqo ON rqo.id = rq.origin_subscriber_log_id
WHERE NOT rq.succeeded AND rq.next_subscriber_log_id IS NULL AND NOT rq.retrying
ORDER BY rqo.executed_at ASC, rqo.origin_subscriber_log_id ASC;
 retry_subscriber_log 
----------------------
 t
(1 row)

--Nothing
SELECT pgl_ddl_deploy.retry_subscriber_log(rq.id)
FROM pgl_ddl_deploy.subscriber_logs rq
INNER JOIN pgl_ddl_deploy.subscriber_logs rqo ON rqo.id = rq.origin_subscriber_log_id
WHERE NOT rq.succeeded AND rq.next_subscriber_log_id IS NULL AND NOT rq.retrying
ORDER BY rqo.executed_at ASC, rqo.origin_subscriber_log_id ASC;
 retry_subscriber_log 
----------------------
(0 rows)

SELECT pgl_ddl_deploy.retry_all_subscriber_logs();
 retry_all_subscriber_logs 
---------------------------
 
(1 row)

SELECT id,
   set_name,
   provider_pid,
   provider_node_name,
   provider_set_config_id,
   executed_as_role,
   origin_subscriber_log_id,
   next_subscriber_log_id,
   ddl_sql,
   full_ddl_sql,
   succeeded,
   error_message
FROM pgl_ddl_deploy.subscriber_logs ORDER BY id;
 id | set_name | provider_pid | provider_node_name | provider_set_config_id |  executed_as_role   | origin_subscriber_log_id | next_subscriber_log_id |                   ddl_sql                   |                               full_ddl_sql                                | succeeded |           error_message           
----+----------+--------------+--------------------+------------------------+---------------------+--------------------------+------------------------+---------------------------------------------+---------------------------------------------------------------------------+-----------+-----------------------------------
  1 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      2 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  2 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      3 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  3 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                      4 | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | f         | relation "joyous" does not exist
  4 | foo      |          100 | awesome            |                      1 | test_pgl_ddl_deploy |                        1 |                        | CREATE VIEW joy AS SELECT * FROM joyous     | SET ROLE test_pgl_ddl_deploy; CREATE VIEW joy AS SELECT * FROM joyous;    | t         | 
  5 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                      7 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  6 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                      9 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
  7 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                      8 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  8 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                     10 | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | f         | relation "happier" does not exist
  9 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                     11 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
 10 | foo      |          101 | awesome            |                      1 | test_pgl_ddl_deploy |                        5 |                        | CREATE VIEW happy AS SELECT * FROM happier; | SET ROLE test_pgl_ddl_deploy; CREATE VIEW happy AS SELECT * FROM happier; | t         | 
 11 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                     12 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
 12 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                     13 | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | f         | relation "gleeful" does not exist
 13 | foo      |          102 | awesome            |                      1 | test_pgl_ddl_deploy |                        6 |                        | CREATE VIEW glee AS SELECT * FROM gleeful;  | SET ROLE test_pgl_ddl_deploy; CREATE VIEW glee AS SELECT * FROM gleeful;  | t         | 
(13 rows)

DROP TABLE joyous CASCADE;
DROP TABLE happier CASCADE;
DROP TABLE gleeful CASCADE;
